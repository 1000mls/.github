# metadata
name: mandatory files policy
description: this policy will ensure the presence of important files in Microsoft project repositories

# filters
resource: repository
where:
- |
  repository.name.startsWith("GitOps", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("AcademicContent", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("ai-edu", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("api-guidelines", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("ApplicationInsights-JS", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("axe-pipelines-samples", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("axe-windows", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("AzureStorageExplorer", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("data-accelerator", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("fast-creator", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("gdk", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("microsoft-ui-xaml", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("Microsoft-Win32-Content-Prep-Tool", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("MLC", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("MLOps", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("powerbi-powershell", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("Recognizers-Text", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("RulesEngine", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("spring-cloud-azure", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("SynapseML", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("etcd3", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("appcenter-sdk-android", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("etcd3", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("appcenter-sdk-android", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Cognitive-Vision-Android", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("omi-kits", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AdaptiveCards", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OMS-docker", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Kusto-Query-Language", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WinObjC", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-linux-build-agent", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-try-php", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-gradle", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Code-Search", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("codetour", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TextWorld", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("perfview", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-extension-telemetry", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OLive", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BosqueLanguage", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerbi-visuals-utils-testutils", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("cascadia-code", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pai", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("testbase", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("winfile", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BotFramework-Composer", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("openscraping-lib-csharp", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-mono-debug", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pict", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-azuretools", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AzureStorageExplorer", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TypeScript-wiki", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MixedReality-HolographicRemoting-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-try-rust", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Intune-PowerShell-SDK", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Dynamics365Commerce.InStore", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-pull-request-github", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OpenAPI.NET.OData", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Azure_Synapse_Toolbox", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mail2bug", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("rural-crowdsourcing-toolkit", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("artifacts-credprovider", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Dynamics365Commerce.ScaleUnit", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("react-native-macos", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-azure-account", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Win2D", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dowhy", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("human-pose-estimation.pytorch", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BotBuilder-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dotnet-computevirtualization", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("FeatureManagement-Dotnet", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vsts-work-item-migrator", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AcademicContent", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("APSI", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("node-jsonc-parser", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AirSim", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("roosterjs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-json-languageservice", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("beachball", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fluentbit-containerd-cri-o-json-log", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-calliope", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-mssql", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fsharplu", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("QuantumLibraries", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WPF-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SandDance", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WebTemplateStudio", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("go-winio", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ApplicationInsights-dotnet", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("beginners-django", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-sample", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("timelinestoryteller", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("FourQlib", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("CNTK", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OpenAPI.NET", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-pipelines-vscode", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SimpleRemote", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("botframework-solutions", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-try-dotnetcore", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("docs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Quantum-NC", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("com-rs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("checkedc-clang", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WinDbg-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("xaml-standard", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-java-pack", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("FHIR-Analytics-Pipelines", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("libHttpClient", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ghrequestor", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("license-checker-webpack-plugin", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Microsoft.IO.RecyclableMemoryStream", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Docker-Provider", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-maven", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("google-play-vsts-extension", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("iqsharp", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PowerBI-visuals-WordCloud", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AzureTipsAndTricks", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SecCon-Framework", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vstest-docs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-cordova", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-spring-initializr", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ApplicationInsights-node.js", StringComparison.InvariantCultureIgnoreCase)

# primitive configuration
configuration:
    mandatoryFiles:
     issueTitle: This repo is missing important files
     issueBody:  |
          There are important files that Microsoft projects should all have that are not present in this repository. A pull request has been opened to add the missing file(s). When the pr is merged this issue will be closed automatically.
          
          Microsoft teams can [learn more about this effort and share feedback](https://docs.opensource.microsoft.com/releasing/maintain/templates/) within the open source guidance available internally.
     prTitle: Adding Microsoft SECURITY.MD
     prBody:  |
           Please accept this contribution adding the standard Microsoft SECURITY.MD :lock: file to help the community understand the security policy and how to safely report security issues. GitHub uses the presence of this file to light-up security reminders and a link to the file. This pull request commits the latest official SECURITY.MD file from https://github.com/microsoft/repo-templates/blob/main/shared/SECURITY.md.
           
           Microsoft teams can [learn more about this effort and share feedback](https://docs.opensource.microsoft.com/releasing/maintain/templates/) within the open source guidance available internally.
     file:
      - path: SECURITY.md
        prContentLink: https://raw.githubusercontent.com/microsoft/repo-templates/main/shared/SECURITY.md
