# metadata
name: mandatory files policy
description: this policy will ensure the presence of important files in Microsoft project repositories

# filters
resource: repository
where:
- |
  repository.name.startsWith("GitOps", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("AcademicContent", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("ai-edu", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("api-guidelines", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("ApplicationInsights-JS", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("axe-pipelines-samples", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("axe-windows", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("AzureStorageExplorer", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("data-accelerator", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("fast-creator", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("gdk", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("microsoft-ui-xaml", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("Microsoft-Win32-Content-Prep-Tool", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("MLC", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("MLOps", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("powerbi-powershell", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("Recognizers-Text", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("RulesEngine", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("spring-cloud-azure", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("SynapseML", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("etcd3", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("appcenter-sdk-android", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("etcd3", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("appcenter-sdk-android", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Cognitive-Vision-Android", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("omi-kits", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AdaptiveCards", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OMS-docker", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Kusto-Query-Language", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WinObjC", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-linux-build-agent", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-try-php", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-gradle", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Code-Search", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("codetour", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TextWorld", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("perfview", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-extension-telemetry", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OLive", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BosqueLanguage", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerbi-visuals-utils-testutils", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("cascadia-code", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pai", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("testbase", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("winfile", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BotFramework-Composer", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("openscraping-lib-csharp", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-mono-debug", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pict", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-azuretools", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AzureStorageExplorer", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TypeScript-wiki", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MixedReality-HolographicRemoting-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-try-rust", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Intune-PowerShell-SDK", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Dynamics365Commerce.InStore", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-pull-request-github", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OpenAPI.NET.OData", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Azure_Synapse_Toolbox", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mail2bug", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("rural-crowdsourcing-toolkit", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("artifacts-credprovider", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Dynamics365Commerce.ScaleUnit", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("react-native-macos", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-azure-account", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Win2D", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dowhy", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("human-pose-estimation.pytorch", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BotBuilder-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dotnet-computevirtualization", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("FeatureManagement-Dotnet", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vsts-work-item-migrator", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AcademicContent", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("APSI", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("node-jsonc-parser", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AirSim", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("roosterjs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-json-languageservice", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("beachball", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fluentbit-containerd-cri-o-json-log", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-calliope", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-mssql", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fsharplu", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("QuantumLibraries", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WPF-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SandDance", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WebTemplateStudio", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("go-winio", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ApplicationInsights-dotnet", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("beginners-django", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-sample", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("timelinestoryteller", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("FourQlib", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("CNTK", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OpenAPI.NET", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-pipelines-vscode", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SimpleRemote", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("botframework-solutions", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-try-dotnetcore", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("docs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Quantum-NC", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("com-rs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("checkedc-clang", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WinDbg-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("xaml-standard", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-java-pack", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("FHIR-Analytics-Pipelines", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("libHttpClient", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ghrequestor", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("license-checker-webpack-plugin", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Microsoft.IO.RecyclableMemoryStream", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Docker-Provider", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-maven", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("google-play-vsts-extension", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("iqsharp", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PowerBI-visuals-WordCloud", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AzureTipsAndTricks", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SecCon-Framework", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vstest-docs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-cordova", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-spring-initializr", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ApplicationInsights-node.js", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-azurelogicapps", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azuredatastudio-postgresql", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-maven-plugins", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ApplicationInsights-Java", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fluentui-system-icons", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vcpkg", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WhatTheHack", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WindowsProtocolTestSuites", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("CameraTraps", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("XamlBehaviors", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("EndUserExpertBotSystem", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerbi-powershell", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-chrome-debug", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-microbit", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("tigertoolbox", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ai-edu", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Dynamics365FO-AppChecker", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azpipelines-kubernetesUI-WebApp", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("CRA", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("docker", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fastformers", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-devops-node-api", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Simplify-Docx", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("wopi-validator-core", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("code-with-engineering-playbook", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SDR", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("uf2", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerapps-tools", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("slngen", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TypeScript-WeChat-Starter", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-js-debug", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("graspologic", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("testfx", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Reporting-Services-LoadTest", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MixedReality-WorldLockingTools-Unity", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MPI.NET", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dotnet", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AI-For-Beginners", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerquery-parser", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Windows-task-snippets", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DataConnectors", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("app-store-vsts-extension", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("hcsshim", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mssql-scripter", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("redux-dynamic-modules", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mu_feature_config", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ebpf-for-windows", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Microsoft-Cloud-App-Security", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PowerApps-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vswhere", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azdataGraph", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OpenXR-MixedReality", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-sql-tips", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("binskim", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AirSim-NeurIPS2019-Drone-Racing", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Analysis-Services", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("edc-showcase", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-tools-for-java", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("jschema", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("rushstack.io-website", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BotBuilder-V3", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("CBM", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MRDL_Unity_PeriodicTable", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mu_tiano_plus", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vert-papers", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WindowsAppSDK", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mu_basecore", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerbi-visuals-utils-localizationutils", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("appcenter-sdk-react-native", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("axe-windows", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("msphpsql", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("datamations", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("plcrashreporter", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Windows-tutorials-inputs-and-devices", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-devops-extension-sample", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-pipelines-extensions", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fast-creator", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("lisa", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AppModelSamples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ELL", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Dynamics365Commerce.Solutions", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SynapseML", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dotnet-apiport", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Windows-Machine-Learning", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("qsharp-runtime", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Build-OMS-Agent-for-Linux", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DMF", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Deep3DFaceReconstruction", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ProjectAcoustics", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TypeScript-Website", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("durabletask-mssql", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MixedRealityToolkit-Unity", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("studentambassadors", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-cpptools", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ethr", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("gather", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WSL-DistroLauncher", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("arcana.cpp", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MLOps", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BingMapsRESTToolkit", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("RulesEngine", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("nav-docker", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("accessibility-insights-web", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MCAS", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("unilm", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mu_oem_sample", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-azure-blockchain-ethereum", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PhoneticMatching", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PR-Metrics", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("rushjs.io-website", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("carbon-aware-sdk", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Windows-classic-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("accessibility-insights-windows", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ApplicationInsights-Kubernetes", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TypeScript-Babel-Starter", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Windows-appsample-photo-editor", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fundraising-and-engagement", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ms-tpm-20-ref", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SymCrypt", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-java-test", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("formula", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TypeScript-TmLanguage", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("singleshotpose", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("EconML", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerbi-desktop-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-try-go", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-pipelines-tasks", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DirectXShaderCompiler", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fhir-server", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DirectX-Specs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("axe-sarif-converter", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DroneRescue", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PL-DNS-Proxy", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("nodejstools", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("msticpy", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pyright", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("varuna", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dicom-server", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-typescript-next", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ClearScript", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-cmake-tools", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-dev-day", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-docs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("v8-docker-buildscript", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vssetup.powershell", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WinUI-Gallery", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-try-node", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("community-organization-operations-suite", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sqltoolsservice", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("tsyringe", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ReportingServicesTools", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Win2D-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mssql-docker", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("O-CNN", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OMS-Agent-for-Linux", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("referencesource", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("api-guidelines", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SeeingVRtoolkit", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Windows-driver-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Dynamics365-Apps-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AL", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("microsoft-ui-xaml-specs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("deepspeed-gpt-neox", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TrillSamples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-pipelines-task-lib", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mu_plus", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("service-fabric-observer", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vision-evaluation", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("antares", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-common-packages", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Windows-universal-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("wpa", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerbi-visuals-timeline", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("appcenter-sdk-dotnet", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sql-server-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MCW", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AspNetCore-React-WebApp", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TypeScript-React-Native-Starter", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ConcordExtensibilitySamples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("spring-cloud-azure", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("botframework-sdk", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-java-dependency", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Application-Insights-Workbooks", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("quicreach", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("StemGNN", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mssql-jdbc", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("slow-cheetah", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("msquic", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ReSub", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("CDM", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ApplicationInsights-JS", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("presidio", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("thrifty", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Sloos", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WSL2-Linux-Kernel", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-pipelines-agent", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Office-Online-Test-Tools-and-Documentation", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-edge-devtools", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-try-java", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("onnxruntime", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("v8-jsi", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("movie-db-java-on-azure", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azcode", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("cognitive-services-speech-sdk-js", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("rlingard-power-automate-docs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("NeuralSpeech", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PQCrypto-LWEKE", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("microsoft-ui-xaml", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MLC", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-icons", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BotFramework-WebChat", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MSBuildLocator", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-maker", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-wsl-recommender", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("GSL", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Azure-Kinect-Sensor-SDK", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("containerregistry", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PQCrypto-SIDH", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PowerPlatformConnectors", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("StoreBroker", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("protein-sequence-models", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("UniVL", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("data-protection-mapping-project", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-try-cpp", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-test", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MMdnn", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-boards-estimate", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Convert-LBFO2SET", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("data-accelerator", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("winrtc", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WSL", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("cpprestsdk", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Recognizers-Text", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-release", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("napajs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("react-native-windows-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("botframework-cli", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Azure_Kinect_ROS_Driver", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("qsharp-compiler", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-livepreview", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DSCEA", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-arcade", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SoftTeacher", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("cookiecutter-spacy-fastapi", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DesktopBridgeToUWP-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DirectML", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("snmalloc", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vstest", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-devops-python-api", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("service-fabric-services-and-actors-dotnet", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("computervision-recipes", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("typed-rest-client", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("accessibility-insights-service", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("GDK", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("lsif-java", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DLWorkspace", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("project-html-website", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("VSSDK-Extensibility-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("axe-pipelines-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MapsSDK-Unity", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-powerquery", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Microsoft-Rocket-Video-Analytics-Platform", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("react-native-windows", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("cppgraphqlgen", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("D3D11On12", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("QuantumKatas", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("GenStudio", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("rushstack-websites", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("EdgeML", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("LightGBM", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("msccl", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Microsoft-Win32-Content-Prep-Tool", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Power-BI-ADF-Synapse", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PowerBI-visuals-MultiKPI", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("devdiv-metrics-and-analyses", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WALNUT", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("UST", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("common-schema", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("accessibility-insights-docs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("XamlBehaviors", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DUA", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("cpp_client_telemetry_modules", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("LiST", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("homebrew-mssql-release", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("cs_comments_service", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("split-css-loader", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("unilm", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-azure-iot-toolkit", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("optimization-insights", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("tiny-calc", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mccp-cli-action-setup", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("project-php-laravel-container", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("peek", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AL-Go-AppSource", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Build-OMS-Agent-for-Linux", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("NoSQLProvider", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("malmo", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("academic-knowledge-exploration-services-utilities", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vs-dockerfiles", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PowerBI-visuals-StrippetsBrowser", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("VSSDK-Analyzers", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("devops-project-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("qTESLA-Library", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PyCodeGPT", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Azure-Kinect-Body-Tracking", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AppModelSamples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-ws2812b", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("cpp-blog", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-textbuffer", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("onnxruntime-tvm", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("todo-app-java-on-azure", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mfit", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ExpressivePixels", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-containers", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("developer-immersion-data", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-brackets-keybindings", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("same-ish", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Azure-Kinect-Sensor-SDK", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BikeSharing360_CognitiveServicesKioskApp", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("java-rbroker-framework", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("k4apps", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("threat-modeling-templates", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SCXcore-kits", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-electron", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("CorrelationVector-Swift", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("IoMT-SMART-FHIR", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("IIS.WebManager", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("win-student-devs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Windows-iotcore-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-32-built", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AL-Go-PTE", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Windows-Camera", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Code-Search", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fonts", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("tes-azure", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mail2bug", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerbi-visuals-dotplot", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-standup", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("VS-ColorThemes", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("d365-fno-entitystore-tools", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("XamarinAzure_ShoppingDemoApp", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("moodle-assignfeedback_onenote", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("llvm-mctoll", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("RHSampling", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("service-fabric-cli", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dexter-robosuite-benchmark", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("kafka", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("tsiclient", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OneBranchBuilder", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("eShopOnContainers", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerbi-visuals-timeline", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("bistring", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SeeingVRtoolkit", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.tr-tr", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("moodle-local_onenote", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pmwcas", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("hax-extension", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-linux-automation", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-pipelines-orchestrator", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Windows-AppConsult-samples-PWA", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sqlworkshops-bdc", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-translations", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("VSSDK-Extensibility-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-devops-intellij", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dstoolkit-objectdetection-tensorflow-azureml", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azuredevopslabs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mu_silicon_arm_tiano", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerbi-visuals-enhancedscatter", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("kafka-connect-cosmosdb", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mstest-extensions", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("CELA-OGC-Legal-Business-Content-Survey", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("python-sklearn-clustering-cookiecutter", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("janus_verifier", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sql-server-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerbi-visuals-utils-dataviewutils", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MetricSystem", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DSC-data-driven-deployment", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BotFramework-BlogSamples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("java-example-fraud-score", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("nlp-recipes", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("icecaps", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("commercial-marketplace-openapi", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Xbox-GDK-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Cognitive-Vision-Windows", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("solar-farms-mapping", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dataforge", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("securitydev", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mu_feature_mm_supv", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("CBL-Mariner-Linux-Kernel", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("v8-docker-buildscript", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("opendata", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("appcenter", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Windows-appsample-photo-lab", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("openbmc", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("app-innovation-team", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("run-in-terminal", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("react-native-dualscreen", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SafeNLP", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscordovadocs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("playwright-service", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BotBuilder-Location", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Partner-Center-Storefront", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("projectevidens-mobile-android", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("meru-dss", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MXDial-IoT-Sample", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PowerBI-visuals-CardBrowser", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-try-rust", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AzureDWScriptsandUtilities", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Essex-PowerBI-visuals-base", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("repo-analysis-detectors", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("O-CNN", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Cognitive-SpeakerRecognition-Windows", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mu_plus", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MBCShopifyAppFrontend", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("codex-gaming", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("gdls_star", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("LongitudinalDifferenceInDifferencesPy", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ACR-GrowthPlaybook", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mobile-center-sdk-specs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mangrove-cdm-components", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-neopixel", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OpenApiDocumentTools", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BingMapsRESTToolkit", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerbi-visuals-utils-chartutils", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SDR", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("bookings-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ProjFS-Managed-API", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("edx-configuration", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sql-data-warehouse-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SoftTeacher", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ModSecurity", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WinHttpPAL", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SDCM", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SuperScaler", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("automatic-graph-layout", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ApplicationInsights-node.js-native-metrics", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sarif-web-component", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("HoloLensForCV", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.nl-nl", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("GTADocs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MFCStoreClient", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("build_with_aks", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MLOpsSamples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Win-RoS-Landing-Page", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-htmlhint", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dcs_dev", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("knossos-ksc", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mu_feature_ipmi", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("project-ruby-rails-container", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("keyper", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("hasOwnProperty", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("LIS3.5", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PowerBI-visuals-PowerKPIMatrix", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Microsoft.Diagnostics.Tracing.Logging", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ApplicationInsights-E2E-Tests", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AzureFilesFUSE", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("wcow-bridge-logging", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("formula", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MPI.NET", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("appcenter-sampleapp-macos-swift", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.mt-mt", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("CILogProcessor", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MSBuildSdks", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("painless-config", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("building-damage-assessment-cnn-siamese", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("onnx-converters-private", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("NativeTooling", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.hu-hu", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerapps-tools", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-devops-ui", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("wolfMQTT", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Windows-appsample-annotated-audio", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ZappysPlayground", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("beginners-django", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-update-server", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sportsvisuals", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("CELA-OGC-Intelligent-Feedback", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MTC_ComeSayHi", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Requirements", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ProtocolTestFramework", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("uts2", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("hackingstem", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DeadLetterMonitor", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("VisualDamageDetector", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ess", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vsts-extension-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("arcana.cpp", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BikeSharing360_MultiContainer", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("data-protection-mapping-project", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SATechnicalOnboarding", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OpenAPI.NET.CSharpAnnotations", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Xbox-ATG-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("node-request-light", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("FMLab", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Microsoft-Start-WordPress-Plugin", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("postmessage-rpc", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BosqueLanguage", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-boards-work-item-visualization", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("EmbeddedSocial-SyncService-for-OBA", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("deepspeed-gpt-neox", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mesmer-docs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("hackingstem-anemometer-arduino", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("gh-sync", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("RoomAliveToolkit", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("LoRA", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-cpptools-api", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Appsample-Photosharing", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Oriole.Windows", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Reference-Guide-For-Quantum-Computing-A-Microsoft-Garage-Project", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("VSProjectSystem", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PVACustomerSuccessRepo", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("commercemesh-guardrails", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("identity-dev-lab", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Chakra-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.ru-ru", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DSCParser", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sql-server-language-extensions", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("msrflute", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azuredatastudio-debug", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vsts-extension-color-control", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("moodle-local_o365", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("StemGNN", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("varuna", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("node-diagnostic-channel", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerbi-visuals-sampleslicer", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-brainpad", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("elastic-db-tools-for-java", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("hackingstem-anemometer-microbit", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BikeSharing360_BotBuilderApps", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-devops-extension-tasks", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("APSINet", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-minecraft-built", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AzureSearch_JFK_Files", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SpeculationControl", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("LoNLI", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("terraform-provider-azurerm-wiki", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Vipr", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("redblack-ai4fsi", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ARM-on-Windows-Ecosystem", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AppConsult-MSIXDevWorkshop", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("cosmos-benchmarking-framework", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("cognitive-face-dotnet", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BluetoothLEExplorer", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("accessibility-insights-windows-oldrepo", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("makecode-arcade-player", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fast_dcs_textrank", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("tslib", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ftl-sdk", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PowerBI-visuals-spline", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Azure-Kinect-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.bs-Latn-BA", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.es-es", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Cognitive-LUIS-Node.js", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TypeScript-Babel-Starter", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("eEVM", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BotFramework-Hubot", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Analysis-Services", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("cargo-pkgconfig", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("clean-code-sparksql", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("lain", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("P.808", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("snmalloc", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-teams-extension", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("IIS.Compression", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.pt-pt", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("bobsql", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MLOpsPython", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vsts-uservoice-ui-extension", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WingtipTicketsSaaS-DbPerTenant", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PowerBI-visuals-HeatStreams", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("checkedc-llvm-test-suite", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WebRTC-universal-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Prague.Net", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Maps", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AppCenter-Test-Espresso-Extensions", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Angara.Serialization", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PowerBI-visuals-tools", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("meru-matrix", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.pdf", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("code-push-vsts-extension", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("wsl-drvfs-stack-formatter", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.pt-br", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Azure-Threat-Research-Matrix", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sarif-website", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("spatial-computing", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SpeciesClassification", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mssql-support", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ToxiScope", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Convert-LBFO2SET", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("anomalydetector", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mu_common_intel_adv_features", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("windows-admin-center-sdk", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-devops-extension-cascading-picklist", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dts-gen", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-maker-built", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MoCapAct", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azopsguide", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("code-push-service", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MediaWikiToVSTSWikiMigration", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("qsharp-runtime", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mu", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("VFSForGit", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Connect-keynote_AI_demos", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("language-server-protocol", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AIforEarth-API-Platform", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vsda", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("edc-showcase", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dotnet-computevirtualization", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-redcap-paas", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Intune-PowerShell-SDK", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("weston-mirror", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-spark-java-sdk", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("windows-docs-rs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-ev3-chassis", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PowerBI-visuals-AttributeSlicer", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerbi-visuals-bulletchart", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("wssd-sdk-for-go", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-oracle", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OpenCLOn12", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("wcf-docker-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MixedRealityDesignLabs_Unity", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SpeechT5", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Microsoft-Message-Bridge", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ApplicationInsights-ServiceFabric", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dpm2012r2wap", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Ros-Orchestration", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ApplicationInsights-Go", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OpenT2T-private", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PowerBI-visuals-TimeBrush", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Cognitive-SpeakerRecognition-Python", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ClearScriptWorkerSample", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("docsmsftblog-exp", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PartsUnlimited", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("spot-ros-wrapper", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Windows-AppConsult-PWALab", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TypeScript-Planning", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TypeScript-wiki", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("goal-ontology-fhl", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-microbit-built", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dtpscan", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Cognitive-Emotion-Windows", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("code-push-site-private", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ostc-automation", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("m365-sample-connector-csharp-aspnet", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("windows-developer-blog-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-electron-prebuilt", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MASS", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("cre-avengers-interns", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Windows-classic-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("o365-moodle", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("checkedc", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vs-editor-api", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("cloud-hypervisor-craton", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("InkMLjs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("GraphSampleBot", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("testfx-docs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("inventory-hub-java-on-azure", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Angara.Statistics", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Azure-Pipelines-ProcessMonitor", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-try-php", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-azureml-remote-web", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PointerSQL", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("aurorabp-sample-data", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("m365-sample-twitter-connector-csharp-aspnet", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("devdivdataquality", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.fil-ph", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-cli", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MS-LaTTE", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WebPlatformInstallerFeed", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SecCon-Framework", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Azure_Kinect_ROS_Driver", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("cognitive-face-training-python", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-standup-teams", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sketch360", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("customlearning_staging", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("aerial_wildlife_detection", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AzureSQLDataSyncHealthChecker", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MixedReality213", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-testplans-test-case-explorer", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AdvocacyPlatform-Dev", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remotehub", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dynamics-365-relationshipassistant-extensibility", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ter_search", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ApplicationInsights-Announcements", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("terraform-spring-boot", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Dynamics365FO-AppChecker", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("maker.js", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("coax", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("M365DevBlogs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mangrove-component-cli", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vsts-azurevm-extension", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("malmo-challenge", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TACO", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azureml-ops-accelerator", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Megatron-DeepSpeed-internal", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Multilingual-Model-Transfer", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-sonar", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OMS-Auditd-Plugin", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("uuid-validate", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("templates.docs.msft.cs-cz", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ADBench", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("moodle-assignsubmission_onenote", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerbi-visuals-drilldown-choropleth", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MTC_WindowsSmartInk", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("onnx-server-openenclave", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("timelinestoryteller", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-try-node", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerbi-visuals-pulsechart", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SQLServerDSC.Reverse", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("project15-openplatform-webapp", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("rudder", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("CELA-IPG-Academic-Roundtable-Open-Source-Presentation", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dtp", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mpcen-test", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("HoloJS", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("projectevidens-web-frontend", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Mobius", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BotBuilder-PersonalityChat", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PQCrypto-PatchforOpenSSH", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-azure-iot-tools", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DigitalManufacturingAccelerator", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("distributed-tracing-samples-pr", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("RxKql", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("NUWA", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-try-java", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-css-languageservice", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Get-ExchangeBuildNumber", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-repos-pr-multi-cherry-pick", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Sloos", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("code-challenges", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("rushjs.io-website", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("appcenter-sampleapp-xamarin", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PowerBI-visuals-Tornado", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("XmlNotepad", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("NeuronBlocks", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-azureml-remote", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vi-hds", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("luis-prebuilt-domains", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("CryptoNets", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PL-DNS-Proxy", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("D3D9On12", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("daytona-docs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Reactor", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-node-azure-pack", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pbilabs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("diskspd", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerplatform-vscode-lab", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-typescript-tslint-plugin", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("node-pty", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-arduino", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("service-fabric-client-dotnet", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("wave-analysis", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SQLEAP", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sqldev", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("immersive-reader-sdk", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("movie-db-java-on-azure", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("CanvasTools-for-VOTT", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-dev-germany", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Microsoft.Caching.Redis", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sourcemap-toolkit", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("amf0", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DroneRescue", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Windows-Driver-Frameworks", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Windows-appsample-huelightcontroller", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("UnityTelemetryVisualizer", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-website", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("IPC.Bond", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Build-omi-script-provider", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ccfdns", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("meru-release", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ServBlockTracableCert", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("taskflow-react", StringComparison.InvariantCultureIgnoreCase)

# primitive configuration
configuration:
    mandatoryFiles:
     issueTitle: This repo is missing important files
     issueBody:  |
          There are important files that Microsoft projects should all have that are not present in this repository. A pull request has been opened to add the missing file(s). When the pr is merged this issue will be closed automatically.
          
          Microsoft teams can [learn more about this effort and share feedback](https://docs.opensource.microsoft.com/releasing/maintain/templates/) within the open source guidance available internally.
     prTitle: Adding Microsoft SECURITY.MD
     prBody:  |
           Please accept this contribution adding the standard Microsoft SECURITY.MD :lock: file to help the community understand the security policy and how to safely report security issues. GitHub uses the presence of this file to light-up security reminders and a link to the file. This pull request commits the latest official SECURITY.MD file from https://github.com/microsoft/repo-templates/blob/main/shared/SECURITY.md.
           
           Microsoft teams can [learn more about this effort and share feedback](https://docs.opensource.microsoft.com/releasing/maintain/templates/) within the open source guidance available internally.
     file:
      - path: SECURITY.md
        prContentLink: https://raw.githubusercontent.com/microsoft/repo-templates/main/shared/SECURITY.md
