# metadata
name: mandatory files policy
description: this policy will ensure the presence of important files in Microsoft project repositories

# filters
resource: repository
where:
- |
  repository.name.startsWith("GitOps", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("AcademicContent", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("ai-edu", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("api-guidelines", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("ApplicationInsights-JS", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("axe-pipelines-samples", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("axe-windows", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("AzureStorageExplorer", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("data-accelerator", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("fast-creator", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("gdk", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("microsoft-ui-xaml", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("Microsoft-Win32-Content-Prep-Tool", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("MLC", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("MLOps", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("powerbi-powershell", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("Recognizers-Text", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("RulesEngine", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("spring-cloud-azure", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("SynapseML", StringComparison.InvariantCultureIgnoreCase) 
  || repository.name.equals("etcd3", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("appcenter-sdk-android", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("etcd3", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("appcenter-sdk-android", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Cognitive-Vision-Android", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("omi-kits", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AdaptiveCards", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OMS-docker", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Kusto-Query-Language", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WinObjC", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-linux-build-agent", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-try-php", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-gradle", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Code-Search", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("codetour", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TextWorld", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("perfview", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-extension-telemetry", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OLive", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BosqueLanguage", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerbi-visuals-utils-testutils", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("cascadia-code", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pai", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("testbase", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("winfile", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BotFramework-Composer", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("openscraping-lib-csharp", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-mono-debug", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pict", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-azuretools", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AzureStorageExplorer", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TypeScript-wiki", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MixedReality-HolographicRemoting-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-try-rust", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Intune-PowerShell-SDK", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Dynamics365Commerce.InStore", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-pull-request-github", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OpenAPI.NET.OData", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Azure_Synapse_Toolbox", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mail2bug", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("rural-crowdsourcing-toolkit", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("artifacts-credprovider", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Dynamics365Commerce.ScaleUnit", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("react-native-macos", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-azure-account", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Win2D", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dowhy", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("human-pose-estimation.pytorch", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BotBuilder-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dotnet-computevirtualization", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("FeatureManagement-Dotnet", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vsts-work-item-migrator", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AcademicContent", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("APSI", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("node-jsonc-parser", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AirSim", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("roosterjs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-json-languageservice", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("beachball", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fluentbit-containerd-cri-o-json-log", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-calliope", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-mssql", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fsharplu", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("QuantumLibraries", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WPF-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SandDance", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WebTemplateStudio", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("go-winio", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ApplicationInsights-dotnet", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("beginners-django", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-sample", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("timelinestoryteller", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("FourQlib", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("CNTK", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OpenAPI.NET", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-pipelines-vscode", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SimpleRemote", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("botframework-solutions", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-try-dotnetcore", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("docs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Quantum-NC", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("com-rs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("checkedc-clang", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WinDbg-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("xaml-standard", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-java-pack", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("FHIR-Analytics-Pipelines", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("libHttpClient", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ghrequestor", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("license-checker-webpack-plugin", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Microsoft.IO.RecyclableMemoryStream", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Docker-Provider", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-maven", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("google-play-vsts-extension", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("iqsharp", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PowerBI-visuals-WordCloud", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AzureTipsAndTricks", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SecCon-Framework", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vstest-docs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-cordova", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-spring-initializr", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ApplicationInsights-node.js", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-azurelogicapps", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azuredatastudio-postgresql", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-maven-plugins", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ApplicationInsights-Java", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fluentui-system-icons", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vcpkg", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WhatTheHack", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WindowsProtocolTestSuites", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("CameraTraps", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("XamlBehaviors", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("EndUserExpertBotSystem", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerbi-powershell", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-chrome-debug", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-microbit", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("tigertoolbox", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ai-edu", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Dynamics365FO-AppChecker", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azpipelines-kubernetesUI-WebApp", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("CRA", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("docker", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fastformers", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-devops-node-api", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Simplify-Docx", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("wopi-validator-core", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("code-with-engineering-playbook", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SDR", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("uf2", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerapps-tools", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("slngen", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TypeScript-WeChat-Starter", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-js-debug", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("graspologic", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("testfx", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Reporting-Services-LoadTest", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MixedReality-WorldLockingTools-Unity", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MPI.NET", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dotnet", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AI-For-Beginners", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerquery-parser", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Windows-task-snippets", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DataConnectors", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("app-store-vsts-extension", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("hcsshim", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mssql-scripter", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("redux-dynamic-modules", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mu_feature_config", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ebpf-for-windows", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Microsoft-Cloud-App-Security", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PowerApps-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vswhere", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azdataGraph", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OpenXR-MixedReality", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-sql-tips", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("binskim", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AirSim-NeurIPS2019-Drone-Racing", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Analysis-Services", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("edc-showcase", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-tools-for-java", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("jschema", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("rushstack.io-website", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BotBuilder-V3", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("CBM", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MRDL_Unity_PeriodicTable", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mu_tiano_plus", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vert-papers", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WindowsAppSDK", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mu_basecore", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerbi-visuals-utils-localizationutils", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("appcenter-sdk-react-native", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("axe-windows", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("msphpsql", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("datamations", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("plcrashreporter", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Windows-tutorials-inputs-and-devices", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-devops-extension-sample", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-pipelines-extensions", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fast-creator", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("lisa", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AppModelSamples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ELL", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Dynamics365Commerce.Solutions", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SynapseML", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dotnet-apiport", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Windows-Machine-Learning", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("qsharp-runtime", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Build-OMS-Agent-for-Linux", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DMF", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Deep3DFaceReconstruction", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ProjectAcoustics", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TypeScript-Website", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("durabletask-mssql", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MixedRealityToolkit-Unity", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("studentambassadors", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-cpptools", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ethr", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("gather", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WSL-DistroLauncher", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("arcana.cpp", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MLOps", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BingMapsRESTToolkit", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("RulesEngine", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("nav-docker", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("accessibility-insights-web", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MCAS", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("unilm", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mu_oem_sample", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-azure-blockchain-ethereum", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PhoneticMatching", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PR-Metrics", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("rushjs.io-website", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("carbon-aware-sdk", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Windows-classic-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("accessibility-insights-windows", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ApplicationInsights-Kubernetes", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TypeScript-Babel-Starter", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Windows-appsample-photo-editor", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fundraising-and-engagement", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ms-tpm-20-ref", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SymCrypt", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-java-test", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("formula", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TypeScript-TmLanguage", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("singleshotpose", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("EconML", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerbi-desktop-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-try-go", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-pipelines-tasks", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DirectXShaderCompiler", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("fhir-server", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DirectX-Specs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("axe-sarif-converter", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DroneRescue", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PL-DNS-Proxy", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("nodejstools", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("msticpy", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pyright", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("varuna", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("dicom-server", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-typescript-next", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ClearScript", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-cmake-tools", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-dev-day", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-docs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("v8-docker-buildscript", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vssetup.powershell", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WinUI-Gallery", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-try-node", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("community-organization-operations-suite", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sqltoolsservice", StringComparison.InvariantCultureIgnoreCase)
    || repository.name.equals("tsyringe", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ReportingServicesTools", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Win2D-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mssql-docker", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("O-CNN", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("OMS-Agent-for-Linux", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("referencesource", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("api-guidelines", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SeeingVRtoolkit", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Windows-driver-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Dynamics365-Apps-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AL", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("microsoft-ui-xaml-specs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("deepspeed-gpt-neox", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TrillSamples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-pipelines-task-lib", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mu_plus", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("service-fabric-observer", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vision-evaluation", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("antares", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-common-packages", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Windows-universal-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("wpa", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("powerbi-visuals-timeline", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("appcenter-sdk-dotnet", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("sql-server-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MCW", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("AspNetCore-React-WebApp", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("TypeScript-React-Native-Starter", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ConcordExtensibilitySamples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("spring-cloud-azure", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("botframework-sdk", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-java-dependency", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Application-Insights-Workbooks", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("quicreach", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("StemGNN", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("mssql-jdbc", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("slow-cheetah", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("msquic", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ReSub", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("CDM", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("ApplicationInsights-JS", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("presidio", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("thrifty", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Sloos", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WSL2-Linux-Kernel", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-pipelines-agent", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Office-Online-Test-Tools-and-Documentation", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-edge-devtools", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-try-java", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("onnxruntime", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("v8-jsi", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("movie-db-java-on-azure", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azcode", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("cognitive-services-speech-sdk-js", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("rlingard-power-automate-docs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("NeuralSpeech", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PQCrypto-LWEKE", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("microsoft-ui-xaml", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MLC", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-icons", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("BotFramework-WebChat", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MSBuildLocator", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-maker", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-wsl-recommender", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("GSL", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Azure-Kinect-Sensor-SDK", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("containerregistry", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PQCrypto-SIDH", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("PowerPlatformConnectors", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("StoreBroker", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("protein-sequence-models", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("UniVL", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("data-protection-mapping-project", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-try-cpp", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-test", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MMdnn", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-boards-estimate", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Convert-LBFO2SET", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("data-accelerator", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("winrtc", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("WSL", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("cpprestsdk", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Recognizers-Text", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-remote-release", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("napajs", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("react-native-windows-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("botframework-cli", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Azure_Kinect_ROS_Driver", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("qsharp-compiler", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-livepreview", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DSCEA", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt-arcade", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("SoftTeacher", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("cookiecutter-spacy-fastapi", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DesktopBridgeToUWP-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DirectML", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("snmalloc", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vstest", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("azure-devops-python-api", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("service-fabric-services-and-actors-dotnet", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("computervision-recipes", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("typed-rest-client", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("accessibility-insights-service", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("GDK", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("lsif-java", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("DLWorkspace", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("project-html-website", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("VSSDK-Extensibility-Samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("axe-pipelines-samples", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("MapsSDK-Unity", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("vscode-powerquery", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Microsoft-Rocket-Video-Analytics-Platform", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("react-native-windows", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("cppgraphqlgen", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("D3D11On12", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("QuantumKatas", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("GenStudio", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("rushstack-websites", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("EdgeML", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("LightGBM", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("pxt", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("msccl", StringComparison.InvariantCultureIgnoreCase)
  || repository.name.equals("Microsoft-Win32-Content-Prep-Tool", StringComparison.InvariantCultureIgnoreCase)

# primitive configuration
configuration:
    mandatoryFiles:
     issueTitle: This repo is missing important files
     issueBody:  |
          There are important files that Microsoft projects should all have that are not present in this repository. A pull request has been opened to add the missing file(s). When the pr is merged this issue will be closed automatically.
          
          Microsoft teams can [learn more about this effort and share feedback](https://docs.opensource.microsoft.com/releasing/maintain/templates/) within the open source guidance available internally.
     prTitle: Adding Microsoft SECURITY.MD
     prBody:  |
           Please accept this contribution adding the standard Microsoft SECURITY.MD :lock: file to help the community understand the security policy and how to safely report security issues. GitHub uses the presence of this file to light-up security reminders and a link to the file. This pull request commits the latest official SECURITY.MD file from https://github.com/microsoft/repo-templates/blob/main/shared/SECURITY.md.
           
           Microsoft teams can [learn more about this effort and share feedback](https://docs.opensource.microsoft.com/releasing/maintain/templates/) within the open source guidance available internally.
     file:
      - path: SECURITY.md
        prContentLink: https://raw.githubusercontent.com/microsoft/repo-templates/main/shared/SECURITY.md
